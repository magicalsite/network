{"version":3,"sources":["redux/profile-reducer.js","redux/messages-reducer.js","App.module.css","assets/images/preloader.svg","components/Welcome/Welcome.module.css","api/api.js","components/Users/Users.module.css","components/Menu/Menu.module.css","components/Menu/Menu.js","components/Footer/Footer.jsx","components/Users/Users.jsx","redux/users-selectors.js","redux/users-reducer.js","components/Users/UsersContainer.jsx","components/Header/Header.js","redux/auth-reducer.js","components/Header/HeaderContainer.js","components/Login/Login.jsx","redux/app-reducer.js","hoc/withSuspense.js","components/Welcome/Welcome.jsx","App.js","redux/redux-store.js","serviceWorker.js","index.js","components/Login/Login.module.css","components/common/Preloader.jsx","components/Header/Header.module.css","components/common/Forms.module.css","utils/validators/validators.js","components/common/Forms.jsx","components/Footer/Footer.module.css"],"names":["initialState","postData","text","like","profile","status","fake","setStatus","type","addPost","post","setProfile","data","setProfileStatus","userId","dispatch","a","async","profileAPI","getStatus","response","putProfileStatus","putStatus","resultCode","setProfileInformation","setProfileInf","savePhotos","file","savePhoto","photos","profileReducer","state","action","dialogData","id","name","messagesData","message","addMessage","messagesReducer","module","exports","instance","axios","withCredentials","baseURL","headers","headerAPI","getMeInformation","get","then","put","loginAPI","email","password","rememberMe","logoutAPI","delete","formData","FormData","append","usersAPI","getUsers","pageNumber","countUser","funcUnfollow","funcFollow","Menu","className","s","center__menu","items","item","to","activeClassName","active","Footer","footer","footer__title","Users","props","page","Math","ceil","numberUsers","arr","i","push","users","map","e","key","activeSlide","undefined","onClick","onPageChanges","isFetching","Preloader","user_item","user_item__img","src","small","followed","disabled","isFollowing","some","unfollowSuccess","user_item__subscribe","followSuccess","user_item__right","user_item__name","user_item__information","getPartUsers","createSelector","usersPage","filter","getIsFetching","getIsFollowing","getPageNumber","getNumberUsers","getCountUser","setTotalCount","preloaderStartStop","boolFetch","isFollowingAC","bool","usersReducer","u","usersId","numPage","UsersAPIContainer","num","choicePage","this","React","Component","UsersContainer","connect","totalCount","Header","header","header__title","header__login","isAuth","login","logOut","logout","setUserData","setUserInfo","authReducer","HeaderAPIContainer","compose","auth","maxLength25","maxLength","ContactForm","reduxForm","form","ettention","onSubmit","handleSubmit","wrap","Field","validate","requiredLogin","placeholder","component","Input","requiredPassword","checkTrue","btn","loginBtn","error","messages","stopSubmit","_error","load","appReducer","withSuspense","fallback","Welcome","welcome","MessagesContainer","lazy","ProfileContainer","App","loadingSuccess","HeaderContainer","center","exact","path","render","app","Promise","all","reducers","combineReducers","profilePage","messagesPage","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","Boolean","location","hostname","match","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","preloader","value","required","max","length","FormElement","input","meta","hasErr","touched","children","errorMessage","propsRest","TextArea","textArea"],"mappings":"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","file":"static/js/main.f37acf52.chunk.js","sourcesContent":["import { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_PROFILE = 'SET_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO = 'SAVE_PHOTO';\r\n\r\nlet initialState = {\r\n    postData: [\r\n        {text: 'Text', like: 12},\r\n        {text: 'Hello', like: 20},\r\n        {text: 'Full', like: 22}],\r\n    profile: null,\r\n    status: '',\r\n    fake: 10\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case 'FAKE':\r\n            return {\r\n                ...state,\r\n                fake: state.fake + 1\r\n            }\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                postData: [...state.postData, { text: action.post, like: 0 }]\r\n            }\r\n        }\r\n        case SET_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.data\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SAVE_PHOTO: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    }\r\n}\r\nexport const addPost = (post) => {\r\n    return {\r\n        type: ADD_POST,\r\n        post\r\n    }\r\n}\r\nconst setProfile = (data) => {\r\n    return {\r\n        type: SET_PROFILE,\r\n        data\r\n    }\r\n}\r\nconst savePhotoSuccess = (photos) => {\r\n    return {\r\n        type: SAVE_PHOTO,\r\n        photos\r\n    }\r\n}\r\n\r\n\r\nexport let setProfileStatus = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.getStatus(userId);\r\n\r\n            dispatch(setStatus(response.data))\r\n    }\r\n}\r\nexport let putProfileStatus = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.putStatus(status);\r\n\r\n            if(response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n\r\n    }\r\n}\r\nexport let setProfileInformation = (userId) => {\r\n    return async (dispatch) => {\r\n        let data = await profileAPI.setProfileInf(userId);\r\n            dispatch(setProfile(data));\r\n    }\r\n}\r\nexport let savePhotos = (file) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.savePhoto(file);\r\n            if(response.data.resultCode === 0) {\r\n                dispatch(savePhotoSuccess(response.data.data.photos));\r\n            }\r\n\r\n    }\r\n}\r\n\r\nexport default profileReducer;","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogData: [\r\n        {id: 1, name: 'Vadim'},\r\n        {id: 2, name: 'Max'},\r\n        {id: 3, name: 'Nikita'}],\r\n    messagesData: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Hello'},\r\n        {id: 3, message: 'How are you?'}]\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, { id: 4, message: action.message }],\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessage = (message) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        message\r\n    }\r\n}\r\n\r\nexport default messagesReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"App_center__274N3\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.a74206e4.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"welcome\":\"Welcome_welcome__2UBgc\",\"start\":\"Welcome_start__JlzN5\"};","import * as axios from 'axios';\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'db2d9127-c4f1-4ece-be4f-110fc33b5c08'\r\n    }\r\n});\r\n\r\n\r\nexport const headerAPI = {\r\n    getMeInformation() {\r\n        return instance.get('auth/me').then(response => response.data);\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    setProfileInf (userId) {\r\n        return instance.get(`profile/${userId}`).then(response => \r\n            response.data\r\n        )\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    putStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n    loginAPI(email, password, rememberMe) {\r\n        return instance.post('/auth/login', {email, password, rememberMe})\r\n    },\r\n    logoutAPI() {\r\n        return instance.delete('/auth/login');\r\n    },\r\n    savePhoto(file) {\r\n        let formData = new FormData();\r\n        formData.append('image', file)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n}\r\n\r\nexport const usersAPI = {\r\n    getUsers(pageNumber = 1, countUser = 5) { \r\n        return instance.get(`users?page=${pageNumber}&count=${countUser}`).then(response => \r\n            response.data);\r\n    },\r\n    funcUnfollow(id) {\r\n        return instance.delete(`follow/${id}`).then(response => \r\n            response.data)\r\n    },\r\n    funcFollow(id) {\r\n        return instance.post(`follow/${id}`).then(response => \r\n            response.data)\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3E3B9\",\"user_item\":\"Users_user_item__3_fZM\",\"user_item__img\":\"Users_user_item__img__2MRsD\",\"user_item__subscribe\":\"Users_user_item__subscribe__3i4bA\",\"user_item__right\":\"Users_user_item__right__1uUJo\",\"user_item__name\":\"Users_user_item__name__1WzEz\",\"user_item__information\":\"Users_user_item__information__2nIKZ\",\"activeSlide\":\"Users_activeSlide__2ztk-\",\"countUser\":\"Users_countUser__13JxU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center__menu\":\"Menu_center__menu__2vs72\",\"item\":\"Menu_item__2eiyd\",\"active\":\"Menu_active__3y0_1\"};","import React from 'react';\r\nimport s from './Menu.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <div className={s.center__menu}>\r\n\t\t\t<ul className={s.items}>\r\n\t\t\t\t<li className={s.item}><NavLink to=\"/profile\" activeClassName={s.active}>Профиль</NavLink></li>\r\n\t\t\t\t<li className={s.item}><NavLink to=\"/messages\" activeClassName={s.active}>Сообщения</NavLink></li>\r\n\t\t\t\t<li className={s.item}><NavLink to=\"/users\" activeClassName={s.active}>Найти друзей</NavLink></li>\r\n\t\t\t\t{/* <li className={s.item}><NavLink to=\"#\">Новости</NavLink></li>\r\n\t\t\t\t<li className={s.item}><NavLink to=\"#\">Музыка</NavLink></li> */}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport s from './Footer.module.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className={s.footer}>\r\n\t\t    <p className={s.footer__title}>© 2020 Sirisko Vad.</p>\r\n\t    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport Preloader from '../common/Preloader';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet Users = (props) => {\r\n    \r\n    let page = Math.ceil(props.numberUsers / props.countUser);\r\n\r\n    let arr = [];\r\n    for (let i = 1; i <= page; i++) {\r\n        arr.push(i);\r\n    }\r\n    return (\r\n        \r\n        <div className={s.users}>\r\n            <h2>Все пользователи:</h2>\r\n            <div className={s.countUser}>\r\n                {\r\n                    arr.map((e, i) => {\r\n                        return (<span key={i} className={props.pageNumber === e ? s.activeSlide : undefined} onClick={() => props.onPageChanges(e)} >{e}</span>)\r\n                    })\r\n                }\r\n            </div>\r\n            {props.isFetching ? <Preloader /> : null}\r\n            \r\n            {\r\n                props.users.map(e =>\r\n                    (<div className={s.user_item} key={e.id}>\r\n                        <div className='user_item__left'>\r\n                            <NavLink to={\"/profile/\" + e.id}>\r\n                                <div className={s.user_item__img}>\r\n                                    <img src={e.photos.small != null ? e.photos.small : 'https://cdn.pixabay.com/photo/2017/03/24/06/49/camera-2170377_1280.png'} />\r\n                                </div>\r\n                            </NavLink>\r\n                            {\r\n                                e.followed ?\r\n                                    <button  disabled={props.isFollowing.some(id => id === e.id)}  onClick={() => {\r\n                                        props.unfollowSuccess(e.id);               \r\n                                    }\r\n                                    } className={s.user_item__subscribe}>Отписаться</button> :\r\n                                    <button disabled={props.isFollowing.some(id => id === e.id)} onClick={() => {\r\n                                        props.followSuccess(e.id);\r\n                                    }\r\n                                    } className={s.user_item__subscribe}>Подписаться</button>\r\n                            }\r\n\r\n                        </div>\r\n                        <div className={s.user_item__right}>\r\n                            <div className={s.user_item__name}>{e.name}</div>\r\n                            <div className={s.user_item__information}>{e.status}</div>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nconst getPartUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getPartUsers = createSelector(getPartUsersSelector, (users) => {\r\n    return users.filter(e => true);\r\n})\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getIsFollowing = (state) => {\r\n    return state.usersPage.isFollowing;\r\n}\r\nexport const getPageNumber = (state) => {\r\n    return state.usersPage.pageNumber;\r\n}\r\nexport const getNumberUsers = (state) => {\r\n    return state.usersPage.numberUsers;\r\n}\r\nexport const getCountUser = (state) => {\r\n    return state.usersPage.countUser;\r\n}","import { usersAPI } from '../api/api';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst CURRENT_PAGE = 'CURRENT_PAGE';\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\r\nconst IS_FETCHING = 'IS_FETCHING';\r\nconst IS_FOLLOWING = 'IS_FOLLOWING';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageNumber: 1,\r\n    numberUsers: 20,\r\n    countUser: 5,\r\n    isFetching: true,\r\n    isFollowing: [2, 3]\r\n}\r\n\r\nlet usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: \r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if(u.id === action.usersId) {\r\n                        return {\r\n                            ...u, followed: true\r\n                        }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW: \r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if(u.id === action.usersId) {\r\n                        return {\r\n                            ...u, followed: false\r\n                        }\r\n                    }\r\n                    return u;\r\n                })\r\n            } \r\n        case SET_USERS: \r\n            return {\r\n                ...state, users: [...action.users]\r\n            }\r\n        case CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                pageNumber: action.numPage\r\n            }\r\n        case SET_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                numberUsers: action.data\r\n            }\r\n        case IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.boolFetch\r\n            }\r\n        case IS_FOLLOWING:\r\n            return {\r\n                ...state,\r\n                isFollowing: action.bool ? \r\n                [...state.isFollowing, action.id]\r\n                : [...state.isFollowing.filter(id => id != action.id)] \r\n            }\r\n        default:\r\n            return state;          \r\n    }\r\n}\r\n\r\nlet follow = (usersId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        usersId\r\n    }\r\n}\r\nlet unfollow = (usersId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        usersId\r\n    }\r\n}\r\nlet setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n}\r\nexport let choicePage = (numPage) => {\r\n    return {\r\n        type: CURRENT_PAGE,\r\n        numPage\r\n    }\r\n}\r\nlet setTotalCount = (data) => {\r\n    return {\r\n        type: SET_TOTAL_COUNT,\r\n        data\r\n    }\r\n}\r\nlet preloaderStartStop = (boolFetch) => {\r\n    return {\r\n        type: IS_FETCHING,\r\n        boolFetch\r\n    }\r\n}\r\nlet isFollowingAC = (bool, id) => {\r\n    return {\r\n        type: IS_FOLLOWING,\r\n        bool,\r\n        id\r\n    }\r\n}\r\nexport let getUsers = (pageNumber, countUser) => {\r\n    return async (dispatch) => {\r\n        dispatch(preloaderStartStop(true)); \r\n        let data = await usersAPI.getUsers(pageNumber, countUser);\r\n\r\n            dispatch(preloaderStartStop(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalCount(data.totalCount));\r\n            \r\n    }\r\n}\r\nexport let unfollowSuccess = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(isFollowingAC(true, userId));          \r\n        let data = await usersAPI.funcUnfollow(userId);\r\n\r\n            if (data.resultCode === 0) {\r\n                dispatch(unfollow(userId));\r\n            }\r\n            dispatch(isFollowingAC(false, userId));\r\n\r\n    }\r\n}\r\nexport let followSuccess = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(isFollowingAC(true, userId));\r\n        let data = await usersAPI.funcFollow(userId); \r\n            if (data.resultCode === 0) {\r\n                dispatch(follow(userId));\r\n            }\r\n            dispatch(isFollowingAC(false, userId));\r\n    }\r\n}\r\nexport default usersReducer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Users from './Users';\r\nimport { getPartUsers, getIsFetching, getIsFollowing, getPageNumber, getNumberUsers, getCountUser } from '../../redux/users-selectors';\r\nimport { getUsers,choicePage, unfollowSuccess, followSuccess } from '../../redux/users-reducer';\r\n\r\n\r\nclass UsersAPIContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.pageNumber, this.props.countUser);\r\n    }\r\n\r\n    onPageChanges = (num) => {\r\n        this.props.choicePage(num);\r\n        this.props.getUsers(num, this.props.countUser);\r\n    }\r\n\r\n    render() {               \r\n        return <Users onPageChanges={this.onPageChanges} {...this.props} />\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getPartUsers(state),\r\n        numberUsers: getNumberUsers(state),\r\n        countUser: getCountUser(state),\r\n        pageNumber: getPageNumber(state),\r\n        isFetching: getIsFetching(state),\r\n        isFollowing: getIsFollowing(state)\r\n    }\r\n}\r\n\r\nlet UsersContainer = connect(mapStateToProps, {\r\n    choicePage,\r\n    getUsers,\r\n    followSuccess,\r\n    unfollowSuccess\r\n})(UsersAPIContainer);\r\n\r\nexport default UsersContainer;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {  NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className={s.header}>\r\n\t\t    <p className={s.header__title}>Социальная сеть :)</p>\r\n        <div className={s.header__login}>{props.isAuth ? <p>{props.login} - <span className={s.logOut} onClick={props.logout}>Выйти</span> </p>  : <NavLink className={s.login} to='/login'>Войти</NavLink> }</div>\r\n\t    </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import { headerAPI, profileAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\nlet setUserData = (id, login, email, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        data: {id, login, email, isAuth}\r\n    }\r\n}\r\n\r\nexport let setUserInfo = () => {\r\n    return async (dispatch) => {\r\n        let data = await headerAPI.getMeInformation();\r\n            if(data.resultCode === 0) {\r\n                let {id, login, email} = data.data;\r\n                dispatch(setUserData(id, login, email, true));\r\n            }\r\n    }\r\n}\r\nexport let login = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.loginAPI(email, password, rememberMe);\r\n            if(response.data.resultCode === 0) {\r\n                dispatch(setUserInfo());\r\n            } else {\r\n                let message = response.data.messages;\r\n                dispatch(stopSubmit('login', {_error: message }))\r\n            }\r\n    }\r\n}\r\nexport let logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.logoutAPI();\r\n            if(response.data.resultCode === 0) {\r\n                dispatch(setUserData(null, null, null, false));\r\n            }\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\nimport { compose } from 'redux';\r\n\r\nclass HeaderAPIContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        id: state.auth.id,\r\n        login: state.auth.login,\r\n        email: state.auth.email,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{\r\n        logout\r\n    })\r\n)(HeaderAPIContainer);","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Input } from '../common/Forms';\r\nimport { maxLength, requiredLogin, requiredPassword, checkTrue } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet maxLength25 = maxLength(25);\r\n\r\nlet LoginForm = (props) => {\r\n    \r\n    return (\r\n        <>\r\n            <div className={s.ettention}>Выполните вход!</div>\r\n            <form onSubmit={props.handleSubmit} className={s.form}>\r\n                <div className={s.wrap}>\r\n                    <Field name=\"email\" validate={[requiredLogin, maxLength25]} placeholder=\"Логин\" component={Input} type=\"text\" />\r\n                </div>\r\n                <div className={s.wrap}>\r\n                    <Field name=\"password\" validate={[requiredPassword]} placeholder=\"Пароль\" component={Input} type=\"password\" />\r\n                </div>\r\n                <div className={s.wrap}>\r\n                    <Field name=\"rememberMe\" validate={[checkTrue]} component={Input} type=\"checkbox\" /> \r\n                    <div>Согласен с условиями...</div> \r\n                </div>\r\n                <div>\r\n                    <button className={s.btn}>Отправить</button>\r\n                </div>\r\n                <div className={s.loginBtn}>{props.error}</div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nlet ContactForm = reduxForm({\r\n    form: 'login'\r\n  })(LoginForm)\r\n\r\nlet Login = (props) => {\r\n    if(props.isAuth) {\r\n        return <Redirect to='/profile' />\r\n    }\r\n    let onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    return (\r\n        <ContactForm onSubmit={onSubmit} />\r\n    )\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    login\r\n})(Login);","import { setUserInfo } from \"./auth-reducer\";\r\n\r\nconst LOADING_SUCCESS = 'LOADING_SUCCESS';\r\n\r\nlet initialState = {\r\n    load: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOADING_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                load: true\r\n            }\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\nlet setUserData = () => {\r\n    return {\r\n        type: LOADING_SUCCESS\r\n    }\r\n}\r\n\r\nexport const loadingSuccess = () => (dispatch) => {\r\n    Promise.all( [dispatch(setUserInfo())] )\r\n    .then(() => {dispatch(setUserData())} );\r\n}\r\n\r\n\r\nexport default appReducer;","import React, { Suspense } from 'react';\r\nimport Preloader from '../components/common/Preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => (<Suspense fallback={<Preloader />}>\r\n        <Component {...props} />\r\n    </Suspense>)\r\n}\r\n\r\nexport default withSuspense;","import React from 'react';\r\nimport s from './Welcome.module.css';\r\n\r\nlet Welcome = () => {\r\n    return (\r\n        <div className={s.welcome}>Добро пожаловать на стартовую страницу!</div>\r\n    )\r\n}\r\n\r\nexport default Welcome;","import React from 'react';\nimport s from './App.module.css';\nimport Menu from './components/Menu/Menu';\n//import ProfileContainer from './components/Profile/ProfileContainer';\n//import MessagesContainer from './components/Messages/MessagesContainer';\nimport { Route } from 'react-router-dom';\nimport Footer from './components/Footer/Footer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport { loadingSuccess } from './redux/app-reducer';\nimport Preloader from './components/common/Preloader';\nimport withSuspense from './hoc/withSuspense';\nimport Welcome from './components/Welcome/Welcome';\n\nconst MessagesContainer = React.lazy(() => import('./components/Messages/MessagesContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.loadingSuccess();\n  } \n\n  render() {\n    if(!this.props.load) {\n      return (\n        <Preloader />\n      )\n    }\n    return (\n      <>\n          <HeaderContainer />\n            <div className={s.center}>\n              <Menu /> \n              <Route exact path=\"/\" component={Welcome}/>\n              <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)} />\n              <Route path='/messages' render={withSuspense(MessagesContainer)} />\n              <Route path='/users' render={() => <UsersContainer /> } />\n              <Route path='/login' render={() => <Login /> } /> \n            </div>\n          <Footer />\n    </>\n    )\n  }\n}\nlet mapStateToProps = (state) => {\n  return {\n    load: state.app.load\n  }\n}\nexport default connect(mapStateToProps, {\n  loadingSuccess\n})(App);\n\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index';\nimport App from './App';\n\nimport store from './redux/redux-store';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n    \n    ReactDOM.render(\n        <Provider store={store} >\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <App />\n            </BrowserRouter>\n        </Provider>,\n    document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ettention\":\"Login_ettention__3vWkd\",\"name\":\"Login_name__2AUpw\",\"wrap\":\"Login_wrap__TnQa2\",\"form\":\"Login_form__M5I8k\",\"btn\":\"Login_btn___pRaw\",\"loginBtn\":\"Login_loginBtn__3dqrT\"};","import React from 'react';\r\nimport preloader from '../../assets/images/preloader.svg';\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <img src={preloader} />\r\n        // <div>load...</div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1XRKk\",\"header__title\":\"Header_header__title__2KhDo\",\"header__login\":\"Header_header__login__NGKMu\",\"logOut\":\"Header_logOut__32pAO\",\"login\":\"Header_login__1n5T4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formData\":\"Forms_formData__1ZfQI\",\"error\":\"Forms_error__1QxN_\",\"input\":\"Forms_input__q4p1Z\",\"textArea\":\"Forms_textArea__3_Ml_\"};","export const requiredPassword = (value) => {\r\n    return value ? undefined : 'Введите пароль...';\r\n}\r\nexport const requiredLogin = (value) => {\r\n    return value ? undefined : 'Введите логин...';\r\n}\r\nexport const required = (value) => {\r\n    return value ? undefined : 'Введите сообщение...';\r\n}\r\nexport const checkTrue = (value) => {\r\n    return value ? undefined : 'Подтвердите условия...';\r\n}\r\n\r\nexport const maxLength = (max) => (value) => {\r\n    return (value.length > max) ? `Макс. символов ${max}...` : undefined;\r\n}","import React from 'react';\r\nimport s from './Forms.module.css';\r\n\r\nconst FormElement = ({input, meta, ...props}) => {\r\n    let hasErr = meta.touched && meta.error;   \r\n    return (\r\n        <div className={s.formData + ' ' + (hasErr ? `${s.error}` : '')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            { hasErr && <span className={s.errorMessage}>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    let {input, meta, ...propsRest} = props;  \r\n    return (\r\n        <FormElement {...props}><input className={s.input} {...input} {...propsRest} /></FormElement>  \r\n    )\r\n}\r\nexport const TextArea = (props) => {\r\n    let {input, meta, ...propsRest} = props;  \r\n    return (\r\n        <FormElement {...props}><textarea className={s.textArea} {...input} {...propsRest} /></FormElement>  \r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2zzsV\",\"footer__title\":\"Footer_footer__title__2uoTI\"};"],"sourceRoot":""}